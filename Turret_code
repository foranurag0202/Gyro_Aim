#include <esp_now.h>
#include <WiFi.h>
#include <ESP32Servo.h>

// Define two servos for X and Z
Servo servoX;
Servo servoZ;

// Pins for servos (update as per your wiring)
#define SERVO_X_PIN 13
#define SERVO_Z_PIN 12

// Structure to receive data
typedef struct struct_message {
  float xAngle;
  float zAngle;
} struct_message;

struct_message incomingData;

// Callback when data is received
void onDataRecv(const esp_now_recv_info_t *info, const uint8_t *incomingDataBytes, int len) {
  memcpy(&incomingData, incomingDataBytes, sizeof(incomingData));
  Serial.print("Received -> X: ");
  Serial.print(incomingData.xAngle);
  Serial.print(" | Z: ");
  Serial.println(incomingData.zAngle);

  // Write angles to servos
  servoX.write((int)incomingData.xAngle);
  servoZ.write((int)incomingData.zAngle);
}

void setup() {
  Serial.begin(115200);

  // Attach servos to pins
  servoX.attach(SERVO_X_PIN);
  servoZ.attach(SERVO_Z_PIN);

  // Set ESP32 as a Wi-Fi Station
  WiFi.mode(WIFI_STA);

  // Init ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }

  // Register receive callback (corrected for new ESP-NOW API)
  esp_now_register_recv_cb(onDataRecv);

  Serial.println("Receiver ready. Waiting for data...");
}

void loop() {
  // Nothing here, everything happens in the callback
}
